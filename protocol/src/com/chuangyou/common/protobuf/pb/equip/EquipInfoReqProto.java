// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip/EquipInfoReqMsg.proto

package com.chuangyou.common.protobuf.pb.equip;

public final class EquipInfoReqProto {
  private EquipInfoReqProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EquipInfoReqMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EquipInfoReqMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 action = 1;</code>
     *
     * <pre>
     * 功能号(1请求装备觉醒  2请求装备注魂)
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>optional int32 action = 1;</code>
     *
     * <pre>
     * 功能号(1请求装备觉醒  2请求装备注魂)
     * </pre>
     */
    int getAction();

    /**
     * <code>optional int32 bagType = 2;</code>
     *
     * <pre>
     * 装备所在背包类型
     * </pre>
     */
    boolean hasBagType();
    /**
     * <code>optional int32 bagType = 2;</code>
     *
     * <pre>
     * 装备所在背包类型
     * </pre>
     */
    int getBagType();

    /**
     * <code>optional int32 position = 3;</code>
     *
     * <pre>
     * 装备位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional int32 position = 3;</code>
     *
     * <pre>
     * 装备位置
     * </pre>
     */
    int getPosition();

    /**
     * <code>optional int32 equipId = 4;</code>
     *
     * <pre>
     * 装备ID
     * </pre>
     */
    boolean hasEquipId();
    /**
     * <code>optional int32 equipId = 4;</code>
     *
     * <pre>
     * 装备ID
     * </pre>
     */
    int getEquipId();

    /**
     * <code>optional int32 stoneBagType = 5;</code>
     *
     * <pre>
     * 宝石所在背包类型
     * </pre>
     */
    boolean hasStoneBagType();
    /**
     * <code>optional int32 stoneBagType = 5;</code>
     *
     * <pre>
     * 宝石所在背包类型
     * </pre>
     */
    int getStoneBagType();

    /**
     * <code>optional int32 stonePos = 6;</code>
     *
     * <pre>
     *宝石所在背包位置
     * </pre>
     */
    boolean hasStonePos();
    /**
     * <code>optional int32 stonePos = 6;</code>
     *
     * <pre>
     *宝石所在背包位置
     * </pre>
     */
    int getStonePos();

    /**
     * <code>optional int32 stoneId = 7;</code>
     *
     * <pre>
     * 要注入的魂石道具ID(请求注魂时使用)
     * </pre>
     */
    boolean hasStoneId();
    /**
     * <code>optional int32 stoneId = 7;</code>
     *
     * <pre>
     * 要注入的魂石道具ID(请求注魂时使用)
     * </pre>
     */
    int getStoneId();
  }
  /**
   * Protobuf type {@code EquipInfoReqMsg}
   *
   * <pre>
   *请求装备信息
   * </pre>
   */
  public static final class EquipInfoReqMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:EquipInfoReqMsg)
      EquipInfoReqMsgOrBuilder {
    // Use EquipInfoReqMsg.newBuilder() to construct.
    private EquipInfoReqMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipInfoReqMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipInfoReqMsg defaultInstance;
    public static EquipInfoReqMsg getDefaultInstance() {
      return defaultInstance;
    }

    public EquipInfoReqMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipInfoReqMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              action_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bagType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              position_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              equipId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              stoneBagType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              stonePos_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              stoneId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.internal_static_EquipInfoReqMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.internal_static_EquipInfoReqMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.class, com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipInfoReqMsg> PARSER =
        new com.google.protobuf.AbstractParser<EquipInfoReqMsg>() {
      public EquipInfoReqMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipInfoReqMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipInfoReqMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>optional int32 action = 1;</code>
     *
     * <pre>
     * 功能号(1请求装备觉醒  2请求装备注魂)
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 action = 1;</code>
     *
     * <pre>
     * 功能号(1请求装备觉醒  2请求装备注魂)
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    public static final int BAGTYPE_FIELD_NUMBER = 2;
    private int bagType_;
    /**
     * <code>optional int32 bagType = 2;</code>
     *
     * <pre>
     * 装备所在背包类型
     * </pre>
     */
    public boolean hasBagType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 bagType = 2;</code>
     *
     * <pre>
     * 装备所在背包类型
     * </pre>
     */
    public int getBagType() {
      return bagType_;
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private int position_;
    /**
     * <code>optional int32 position = 3;</code>
     *
     * <pre>
     * 装备位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 position = 3;</code>
     *
     * <pre>
     * 装备位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    public static final int EQUIPID_FIELD_NUMBER = 4;
    private int equipId_;
    /**
     * <code>optional int32 equipId = 4;</code>
     *
     * <pre>
     * 装备ID
     * </pre>
     */
    public boolean hasEquipId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 equipId = 4;</code>
     *
     * <pre>
     * 装备ID
     * </pre>
     */
    public int getEquipId() {
      return equipId_;
    }

    public static final int STONEBAGTYPE_FIELD_NUMBER = 5;
    private int stoneBagType_;
    /**
     * <code>optional int32 stoneBagType = 5;</code>
     *
     * <pre>
     * 宝石所在背包类型
     * </pre>
     */
    public boolean hasStoneBagType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 stoneBagType = 5;</code>
     *
     * <pre>
     * 宝石所在背包类型
     * </pre>
     */
    public int getStoneBagType() {
      return stoneBagType_;
    }

    public static final int STONEPOS_FIELD_NUMBER = 6;
    private int stonePos_;
    /**
     * <code>optional int32 stonePos = 6;</code>
     *
     * <pre>
     *宝石所在背包位置
     * </pre>
     */
    public boolean hasStonePos() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 stonePos = 6;</code>
     *
     * <pre>
     *宝石所在背包位置
     * </pre>
     */
    public int getStonePos() {
      return stonePos_;
    }

    public static final int STONEID_FIELD_NUMBER = 7;
    private int stoneId_;
    /**
     * <code>optional int32 stoneId = 7;</code>
     *
     * <pre>
     * 要注入的魂石道具ID(请求注魂时使用)
     * </pre>
     */
    public boolean hasStoneId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 stoneId = 7;</code>
     *
     * <pre>
     * 要注入的魂石道具ID(请求注魂时使用)
     * </pre>
     */
    public int getStoneId() {
      return stoneId_;
    }

    private void initFields() {
      action_ = 0;
      bagType_ = 0;
      position_ = 0;
      equipId_ = 0;
      stoneBagType_ = 0;
      stonePos_ = 0;
      stoneId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bagType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, position_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, equipId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, stoneBagType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, stonePos_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, stoneId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bagType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, position_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, equipId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, stoneBagType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, stonePos_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, stoneId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EquipInfoReqMsg}
     *
     * <pre>
     *请求装备信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EquipInfoReqMsg)
        com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.internal_static_EquipInfoReqMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.internal_static_EquipInfoReqMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.class, com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.Builder.class);
      }

      // Construct using com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bagType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        equipId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        stoneBagType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        stonePos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        stoneId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.internal_static_EquipInfoReqMsg_descriptor;
      }

      public com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg getDefaultInstanceForType() {
        return com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.getDefaultInstance();
      }

      public com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg build() {
        com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg buildPartial() {
        com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg result = new com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bagType_ = bagType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.equipId_ = equipId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.stoneBagType_ = stoneBagType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.stonePos_ = stonePos_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.stoneId_ = stoneId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg) {
          return mergeFrom((com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg other) {
        if (other == com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasBagType()) {
          setBagType(other.getBagType());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasEquipId()) {
          setEquipId(other.getEquipId());
        }
        if (other.hasStoneBagType()) {
          setStoneBagType(other.getStoneBagType());
        }
        if (other.hasStonePos()) {
          setStonePos(other.getStonePos());
        }
        if (other.hasStoneId()) {
          setStoneId(other.getStoneId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chuangyou.common.protobuf.pb.equip.EquipInfoReqProto.EquipInfoReqMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int action_ ;
      /**
       * <code>optional int32 action = 1;</code>
       *
       * <pre>
       * 功能号(1请求装备觉醒  2请求装备注魂)
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 action = 1;</code>
       *
       * <pre>
       * 功能号(1请求装备觉醒  2请求装备注魂)
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>optional int32 action = 1;</code>
       *
       * <pre>
       * 功能号(1请求装备觉醒  2请求装备注魂)
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000001;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 action = 1;</code>
       *
       * <pre>
       * 功能号(1请求装备觉醒  2请求装备注魂)
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      private int bagType_ ;
      /**
       * <code>optional int32 bagType = 2;</code>
       *
       * <pre>
       * 装备所在背包类型
       * </pre>
       */
      public boolean hasBagType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 bagType = 2;</code>
       *
       * <pre>
       * 装备所在背包类型
       * </pre>
       */
      public int getBagType() {
        return bagType_;
      }
      /**
       * <code>optional int32 bagType = 2;</code>
       *
       * <pre>
       * 装备所在背包类型
       * </pre>
       */
      public Builder setBagType(int value) {
        bitField0_ |= 0x00000002;
        bagType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bagType = 2;</code>
       *
       * <pre>
       * 装备所在背包类型
       * </pre>
       */
      public Builder clearBagType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bagType_ = 0;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <code>optional int32 position = 3;</code>
       *
       * <pre>
       * 装备位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 position = 3;</code>
       *
       * <pre>
       * 装备位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional int32 position = 3;</code>
       *
       * <pre>
       * 装备位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000004;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 position = 3;</code>
       *
       * <pre>
       * 装备位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        position_ = 0;
        onChanged();
        return this;
      }

      private int equipId_ ;
      /**
       * <code>optional int32 equipId = 4;</code>
       *
       * <pre>
       * 装备ID
       * </pre>
       */
      public boolean hasEquipId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 equipId = 4;</code>
       *
       * <pre>
       * 装备ID
       * </pre>
       */
      public int getEquipId() {
        return equipId_;
      }
      /**
       * <code>optional int32 equipId = 4;</code>
       *
       * <pre>
       * 装备ID
       * </pre>
       */
      public Builder setEquipId(int value) {
        bitField0_ |= 0x00000008;
        equipId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 equipId = 4;</code>
       *
       * <pre>
       * 装备ID
       * </pre>
       */
      public Builder clearEquipId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        equipId_ = 0;
        onChanged();
        return this;
      }

      private int stoneBagType_ ;
      /**
       * <code>optional int32 stoneBagType = 5;</code>
       *
       * <pre>
       * 宝石所在背包类型
       * </pre>
       */
      public boolean hasStoneBagType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 stoneBagType = 5;</code>
       *
       * <pre>
       * 宝石所在背包类型
       * </pre>
       */
      public int getStoneBagType() {
        return stoneBagType_;
      }
      /**
       * <code>optional int32 stoneBagType = 5;</code>
       *
       * <pre>
       * 宝石所在背包类型
       * </pre>
       */
      public Builder setStoneBagType(int value) {
        bitField0_ |= 0x00000010;
        stoneBagType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stoneBagType = 5;</code>
       *
       * <pre>
       * 宝石所在背包类型
       * </pre>
       */
      public Builder clearStoneBagType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        stoneBagType_ = 0;
        onChanged();
        return this;
      }

      private int stonePos_ ;
      /**
       * <code>optional int32 stonePos = 6;</code>
       *
       * <pre>
       *宝石所在背包位置
       * </pre>
       */
      public boolean hasStonePos() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 stonePos = 6;</code>
       *
       * <pre>
       *宝石所在背包位置
       * </pre>
       */
      public int getStonePos() {
        return stonePos_;
      }
      /**
       * <code>optional int32 stonePos = 6;</code>
       *
       * <pre>
       *宝石所在背包位置
       * </pre>
       */
      public Builder setStonePos(int value) {
        bitField0_ |= 0x00000020;
        stonePos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stonePos = 6;</code>
       *
       * <pre>
       *宝石所在背包位置
       * </pre>
       */
      public Builder clearStonePos() {
        bitField0_ = (bitField0_ & ~0x00000020);
        stonePos_ = 0;
        onChanged();
        return this;
      }

      private int stoneId_ ;
      /**
       * <code>optional int32 stoneId = 7;</code>
       *
       * <pre>
       * 要注入的魂石道具ID(请求注魂时使用)
       * </pre>
       */
      public boolean hasStoneId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 stoneId = 7;</code>
       *
       * <pre>
       * 要注入的魂石道具ID(请求注魂时使用)
       * </pre>
       */
      public int getStoneId() {
        return stoneId_;
      }
      /**
       * <code>optional int32 stoneId = 7;</code>
       *
       * <pre>
       * 要注入的魂石道具ID(请求注魂时使用)
       * </pre>
       */
      public Builder setStoneId(int value) {
        bitField0_ |= 0x00000040;
        stoneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stoneId = 7;</code>
       *
       * <pre>
       * 要注入的魂石道具ID(请求注魂时使用)
       * </pre>
       */
      public Builder clearStoneId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stoneId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EquipInfoReqMsg)
    }

    static {
      defaultInstance = new EquipInfoReqMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EquipInfoReqMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EquipInfoReqMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EquipInfoReqMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033equip/EquipInfoReqMsg.proto\"\216\001\n\017EquipI" +
      "nfoReqMsg\022\016\n\006action\030\001 \001(\005\022\017\n\007bagType\030\002 \001" +
      "(\005\022\020\n\010position\030\003 \001(\005\022\017\n\007equipId\030\004 \001(\005\022\024\n" +
      "\014stoneBagType\030\005 \001(\005\022\020\n\010stonePos\030\006 \001(\005\022\017\n" +
      "\007stoneId\030\007 \001(\005B;\n&com.chuangyou.common.p" +
      "rotobuf.pb.equipB\021EquipInfoReqProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_EquipInfoReqMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_EquipInfoReqMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_EquipInfoReqMsg_descriptor,
        new java.lang.String[] { "Action", "BagType", "Position", "EquipId", "StoneBagType", "StonePos", "StoneId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

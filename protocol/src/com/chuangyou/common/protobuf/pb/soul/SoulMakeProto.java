// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: soul/SoulMakeMsg.proto

package com.chuangyou.common.protobuf.pb.soul;

public final class SoulMakeProto {
  private SoulMakeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SoulMakeMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SoulMakeMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 state = 1;</code>
     *
     * <pre>
     *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
     * </pre>
     */
    boolean hasState();
    /**
     * <code>required int32 state = 1;</code>
     *
     * <pre>
     *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
     * </pre>
     */
    int getState();

    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *	开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *	开始时间
     * </pre>
     */
    long getStartTime();

    /**
     * <code>required int32 killNum = 3;</code>
     *
     * <pre>
     *杀怪数量
     * </pre>
     */
    boolean hasKillNum();
    /**
     * <code>required int32 killNum = 3;</code>
     *
     * <pre>
     *杀怪数量
     * </pre>
     */
    int getKillNum();

    /**
     * <code>required int32 totalTime = 4;</code>
     *
     * <pre>
     *总时间（单位秒）
     * </pre>
     */
    boolean hasTotalTime();
    /**
     * <code>required int32 totalTime = 4;</code>
     *
     * <pre>
     *总时间（单位秒）
     * </pre>
     */
    int getTotalTime();

    /**
     * <code>required int32 itemId = 5;</code>
     *
     * <pre>
     *材料ID
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required int32 itemId = 5;</code>
     *
     * <pre>
     *材料ID
     * </pre>
     */
    int getItemId();

    /**
     * <code>required int64 lastQteTime = 6;</code>
     *
     * <pre>
     *上一次执行QTE时间  (UTC时间：单位豪秒)
     * </pre>
     */
    boolean hasLastQteTime();
    /**
     * <code>required int64 lastQteTime = 6;</code>
     *
     * <pre>
     *上一次执行QTE时间  (UTC时间：单位豪秒)
     * </pre>
     */
    long getLastQteTime();

    /**
     * <code>required int32 qte = 7;</code>
     *
     * <pre>
     *上一次qte
     * </pre>
     */
    boolean hasQte();
    /**
     * <code>required int32 qte = 7;</code>
     *
     * <pre>
     *上一次qte
     * </pre>
     */
    int getQte();

    /**
     * <code>required int32 index = 8;</code>
     *
     * <pre>
     *正制作的材料在选择列表上的位置
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>required int32 index = 8;</code>
     *
     * <pre>
     *正制作的材料在选择列表上的位置
     * </pre>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code SoulMakeMsg}
   */
  public static final class SoulMakeMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SoulMakeMsg)
      SoulMakeMsgOrBuilder {
    // Use SoulMakeMsg.newBuilder() to construct.
    private SoulMakeMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SoulMakeMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SoulMakeMsg defaultInstance;
    public static SoulMakeMsg getDefaultInstance() {
      return defaultInstance;
    }

    public SoulMakeMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SoulMakeMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              state_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              killNum_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              itemId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lastQteTime_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              qte_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              index_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.internal_static_SoulMakeMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.internal_static_SoulMakeMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.class, com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<SoulMakeMsg> PARSER =
        new com.google.protobuf.AbstractParser<SoulMakeMsg>() {
      public SoulMakeMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SoulMakeMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SoulMakeMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>required int32 state = 1;</code>
     *
     * <pre>
     *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 state = 1;</code>
     *
     * <pre>
     *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
     * </pre>
     */
    public int getState() {
      return state_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 2;
    private long startTime_;
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *	开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 startTime = 2;</code>
     *
     * <pre>
     *	开始时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int KILLNUM_FIELD_NUMBER = 3;
    private int killNum_;
    /**
     * <code>required int32 killNum = 3;</code>
     *
     * <pre>
     *杀怪数量
     * </pre>
     */
    public boolean hasKillNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 killNum = 3;</code>
     *
     * <pre>
     *杀怪数量
     * </pre>
     */
    public int getKillNum() {
      return killNum_;
    }

    public static final int TOTALTIME_FIELD_NUMBER = 4;
    private int totalTime_;
    /**
     * <code>required int32 totalTime = 4;</code>
     *
     * <pre>
     *总时间（单位秒）
     * </pre>
     */
    public boolean hasTotalTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 totalTime = 4;</code>
     *
     * <pre>
     *总时间（单位秒）
     * </pre>
     */
    public int getTotalTime() {
      return totalTime_;
    }

    public static final int ITEMID_FIELD_NUMBER = 5;
    private int itemId_;
    /**
     * <code>required int32 itemId = 5;</code>
     *
     * <pre>
     *材料ID
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 itemId = 5;</code>
     *
     * <pre>
     *材料ID
     * </pre>
     */
    public int getItemId() {
      return itemId_;
    }

    public static final int LASTQTETIME_FIELD_NUMBER = 6;
    private long lastQteTime_;
    /**
     * <code>required int64 lastQteTime = 6;</code>
     *
     * <pre>
     *上一次执行QTE时间  (UTC时间：单位豪秒)
     * </pre>
     */
    public boolean hasLastQteTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 lastQteTime = 6;</code>
     *
     * <pre>
     *上一次执行QTE时间  (UTC时间：单位豪秒)
     * </pre>
     */
    public long getLastQteTime() {
      return lastQteTime_;
    }

    public static final int QTE_FIELD_NUMBER = 7;
    private int qte_;
    /**
     * <code>required int32 qte = 7;</code>
     *
     * <pre>
     *上一次qte
     * </pre>
     */
    public boolean hasQte() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 qte = 7;</code>
     *
     * <pre>
     *上一次qte
     * </pre>
     */
    public int getQte() {
      return qte_;
    }

    public static final int INDEX_FIELD_NUMBER = 8;
    private int index_;
    /**
     * <code>required int32 index = 8;</code>
     *
     * <pre>
     *正制作的材料在选择列表上的位置
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 index = 8;</code>
     *
     * <pre>
     *正制作的材料在选择列表上的位置
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    private void initFields() {
      state_ = 0;
      startTime_ = 0L;
      killNum_ = 0;
      totalTime_ = 0;
      itemId_ = 0;
      lastQteTime_ = 0L;
      qte_ = 0;
      index_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKillNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastQteTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQte()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, killNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, totalTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, itemId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, lastQteTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, qte_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, index_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, killNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, itemId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, lastQteTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, qte_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SoulMakeMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SoulMakeMsg)
        com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.internal_static_SoulMakeMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.internal_static_SoulMakeMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.class, com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.Builder.class);
      }

      // Construct using com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        killNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lastQteTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        qte_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.internal_static_SoulMakeMsg_descriptor;
      }

      public com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg getDefaultInstanceForType() {
        return com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.getDefaultInstance();
      }

      public com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg build() {
        com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg buildPartial() {
        com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg result = new com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.killNum_ = killNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalTime_ = totalTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lastQteTime_ = lastQteTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.qte_ = qte_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg) {
          return mergeFrom((com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg other) {
        if (other == com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasKillNum()) {
          setKillNum(other.getKillNum());
        }
        if (other.hasTotalTime()) {
          setTotalTime(other.getTotalTime());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasLastQteTime()) {
          setLastQteTime(other.getLastQteTime());
        }
        if (other.hasQte()) {
          setQte(other.getQte());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasKillNum()) {
          
          return false;
        }
        if (!hasTotalTime()) {
          
          return false;
        }
        if (!hasItemId()) {
          
          return false;
        }
        if (!hasLastQteTime()) {
          
          return false;
        }
        if (!hasQte()) {
          
          return false;
        }
        if (!hasIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chuangyou.common.protobuf.pb.soul.SoulMakeProto.SoulMakeMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int state_ ;
      /**
       * <code>required int32 state = 1;</code>
       *
       * <pre>
       *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 state = 1;</code>
       *
       * <pre>
       *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
       * </pre>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>required int32 state = 1;</code>
       *
       * <pre>
       *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
       * </pre>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 state = 1;</code>
       *
       * <pre>
       *状态：状态：0：未初始化 1:QTE提交 2：制作中（未接受任务） 3：制作中（已接任务）  4：完成状态
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *	开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *	开始时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *	开始时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000002;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startTime = 2;</code>
       *
       * <pre>
       *	开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private int killNum_ ;
      /**
       * <code>required int32 killNum = 3;</code>
       *
       * <pre>
       *杀怪数量
       * </pre>
       */
      public boolean hasKillNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 killNum = 3;</code>
       *
       * <pre>
       *杀怪数量
       * </pre>
       */
      public int getKillNum() {
        return killNum_;
      }
      /**
       * <code>required int32 killNum = 3;</code>
       *
       * <pre>
       *杀怪数量
       * </pre>
       */
      public Builder setKillNum(int value) {
        bitField0_ |= 0x00000004;
        killNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 killNum = 3;</code>
       *
       * <pre>
       *杀怪数量
       * </pre>
       */
      public Builder clearKillNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        killNum_ = 0;
        onChanged();
        return this;
      }

      private int totalTime_ ;
      /**
       * <code>required int32 totalTime = 4;</code>
       *
       * <pre>
       *总时间（单位秒）
       * </pre>
       */
      public boolean hasTotalTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 totalTime = 4;</code>
       *
       * <pre>
       *总时间（单位秒）
       * </pre>
       */
      public int getTotalTime() {
        return totalTime_;
      }
      /**
       * <code>required int32 totalTime = 4;</code>
       *
       * <pre>
       *总时间（单位秒）
       * </pre>
       */
      public Builder setTotalTime(int value) {
        bitField0_ |= 0x00000008;
        totalTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 totalTime = 4;</code>
       *
       * <pre>
       *总时间（单位秒）
       * </pre>
       */
      public Builder clearTotalTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalTime_ = 0;
        onChanged();
        return this;
      }

      private int itemId_ ;
      /**
       * <code>required int32 itemId = 5;</code>
       *
       * <pre>
       *材料ID
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 itemId = 5;</code>
       *
       * <pre>
       *材料ID
       * </pre>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>required int32 itemId = 5;</code>
       *
       * <pre>
       *材料ID
       * </pre>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000010;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemId = 5;</code>
       *
       * <pre>
       *材料ID
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        itemId_ = 0;
        onChanged();
        return this;
      }

      private long lastQteTime_ ;
      /**
       * <code>required int64 lastQteTime = 6;</code>
       *
       * <pre>
       *上一次执行QTE时间  (UTC时间：单位豪秒)
       * </pre>
       */
      public boolean hasLastQteTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 lastQteTime = 6;</code>
       *
       * <pre>
       *上一次执行QTE时间  (UTC时间：单位豪秒)
       * </pre>
       */
      public long getLastQteTime() {
        return lastQteTime_;
      }
      /**
       * <code>required int64 lastQteTime = 6;</code>
       *
       * <pre>
       *上一次执行QTE时间  (UTC时间：单位豪秒)
       * </pre>
       */
      public Builder setLastQteTime(long value) {
        bitField0_ |= 0x00000020;
        lastQteTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastQteTime = 6;</code>
       *
       * <pre>
       *上一次执行QTE时间  (UTC时间：单位豪秒)
       * </pre>
       */
      public Builder clearLastQteTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lastQteTime_ = 0L;
        onChanged();
        return this;
      }

      private int qte_ ;
      /**
       * <code>required int32 qte = 7;</code>
       *
       * <pre>
       *上一次qte
       * </pre>
       */
      public boolean hasQte() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 qte = 7;</code>
       *
       * <pre>
       *上一次qte
       * </pre>
       */
      public int getQte() {
        return qte_;
      }
      /**
       * <code>required int32 qte = 7;</code>
       *
       * <pre>
       *上一次qte
       * </pre>
       */
      public Builder setQte(int value) {
        bitField0_ |= 0x00000040;
        qte_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 qte = 7;</code>
       *
       * <pre>
       *上一次qte
       * </pre>
       */
      public Builder clearQte() {
        bitField0_ = (bitField0_ & ~0x00000040);
        qte_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <code>required int32 index = 8;</code>
       *
       * <pre>
       *正制作的材料在选择列表上的位置
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 index = 8;</code>
       *
       * <pre>
       *正制作的材料在选择列表上的位置
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>required int32 index = 8;</code>
       *
       * <pre>
       *正制作的材料在选择列表上的位置
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000080;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 index = 8;</code>
       *
       * <pre>
       *正制作的材料在选择列表上的位置
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        index_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SoulMakeMsg)
    }

    static {
      defaultInstance = new SoulMakeMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SoulMakeMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SoulMakeMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SoulMakeMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026soul/SoulMakeMsg.proto\"\224\001\n\013SoulMakeMsg" +
      "\022\r\n\005state\030\001 \002(\005\022\021\n\tstartTime\030\002 \002(\003\022\017\n\007ki" +
      "llNum\030\003 \002(\005\022\021\n\ttotalTime\030\004 \002(\005\022\016\n\006itemId" +
      "\030\005 \002(\005\022\023\n\013lastQteTime\030\006 \002(\003\022\013\n\003qte\030\007 \002(\005" +
      "\022\r\n\005index\030\010 \002(\005B6\n%com.chuangyou.common." +
      "protobuf.pb.soulB\rSoulMakeProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SoulMakeMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SoulMakeMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SoulMakeMsg_descriptor,
        new java.lang.String[] { "State", "StartTime", "KillNum", "TotalTime", "ItemId", "LastQteTime", "Qte", "Index", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

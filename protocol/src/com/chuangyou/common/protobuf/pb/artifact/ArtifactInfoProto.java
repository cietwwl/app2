// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: artifact/ArtifactInfoMsg.proto

package com.chuangyou.common.protobuf.pb.artifact;

public final class ArtifactInfoProto {
  private ArtifactInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ArtifactInfoMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ArtifactInfoMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 artifactId = 1;</code>
     *
     * <pre>
     * 神器ID
     * </pre>
     */
    boolean hasArtifactId();
    /**
     * <code>optional int32 artifactId = 1;</code>
     *
     * <pre>
     * 神器ID
     * </pre>
     */
    int getArtifactId();

    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 神器等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 神器等级
     * </pre>
     */
    int getLevel();

    /**
     * <code>optional int32 starLevel = 3;</code>
     *
     * <pre>
     * 神器星级
     * </pre>
     */
    boolean hasStarLevel();
    /**
     * <code>optional int32 starLevel = 3;</code>
     *
     * <pre>
     * 神器星级
     * </pre>
     */
    int getStarLevel();

    /**
     * <code>optional int32 star = 4;</code>
     *
     * <pre>
     * 当前星级星数
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>optional int32 star = 4;</code>
     *
     * <pre>
     * 当前星级星数
     * </pre>
     */
    int getStar();

    /**
     * <code>optional int32 starBless = 5;</code>
     *
     * <pre>
     * 当前星数祝福值
     * </pre>
     */
    boolean hasStarBless();
    /**
     * <code>optional int32 starBless = 5;</code>
     *
     * <pre>
     * 当前星数祝福值
     * </pre>
     */
    int getStarBless();

    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    java.util.List<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg> 
        getStoneInfoList();
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg getStoneInfo(int index);
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    int getStoneInfoCount();
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    java.util.List<? extends com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder> 
        getStoneInfoOrBuilderList();
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder getStoneInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ArtifactInfoMsg}
   *
   * <pre>
   *某部位神器信息
   * </pre>
   */
  public static final class ArtifactInfoMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ArtifactInfoMsg)
      ArtifactInfoMsgOrBuilder {
    // Use ArtifactInfoMsg.newBuilder() to construct.
    private ArtifactInfoMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ArtifactInfoMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ArtifactInfoMsg defaultInstance;
    public static ArtifactInfoMsg getDefaultInstance() {
      return defaultInstance;
    }

    public ArtifactInfoMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ArtifactInfoMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              artifactId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              starLevel_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              star_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              starBless_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stoneInfo_ = new java.util.ArrayList<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg>();
                mutable_bitField0_ |= 0x00000020;
              }
              stoneInfo_.add(input.readMessage(com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          stoneInfo_ = java.util.Collections.unmodifiableList(stoneInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.internal_static_ArtifactInfoMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.internal_static_ArtifactInfoMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.class, com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<ArtifactInfoMsg> PARSER =
        new com.google.protobuf.AbstractParser<ArtifactInfoMsg>() {
      public ArtifactInfoMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArtifactInfoMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactInfoMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ARTIFACTID_FIELD_NUMBER = 1;
    private int artifactId_;
    /**
     * <code>optional int32 artifactId = 1;</code>
     *
     * <pre>
     * 神器ID
     * </pre>
     */
    public boolean hasArtifactId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 artifactId = 1;</code>
     *
     * <pre>
     * 神器ID
     * </pre>
     */
    public int getArtifactId() {
      return artifactId_;
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 神器等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 神器等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    public static final int STARLEVEL_FIELD_NUMBER = 3;
    private int starLevel_;
    /**
     * <code>optional int32 starLevel = 3;</code>
     *
     * <pre>
     * 神器星级
     * </pre>
     */
    public boolean hasStarLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 starLevel = 3;</code>
     *
     * <pre>
     * 神器星级
     * </pre>
     */
    public int getStarLevel() {
      return starLevel_;
    }

    public static final int STAR_FIELD_NUMBER = 4;
    private int star_;
    /**
     * <code>optional int32 star = 4;</code>
     *
     * <pre>
     * 当前星级星数
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 star = 4;</code>
     *
     * <pre>
     * 当前星级星数
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    public static final int STARBLESS_FIELD_NUMBER = 5;
    private int starBless_;
    /**
     * <code>optional int32 starBless = 5;</code>
     *
     * <pre>
     * 当前星数祝福值
     * </pre>
     */
    public boolean hasStarBless() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 starBless = 5;</code>
     *
     * <pre>
     * 当前星数祝福值
     * </pre>
     */
    public int getStarBless() {
      return starBless_;
    }

    public static final int STONEINFO_FIELD_NUMBER = 6;
    private java.util.List<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg> stoneInfo_;
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    public java.util.List<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg> getStoneInfoList() {
      return stoneInfo_;
    }
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    public java.util.List<? extends com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder> 
        getStoneInfoOrBuilderList() {
      return stoneInfo_;
    }
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    public int getStoneInfoCount() {
      return stoneInfo_.size();
    }
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg getStoneInfo(int index) {
      return stoneInfo_.get(index);
    }
    /**
     * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
     *
     * <pre>
     * 宝石信息
     * </pre>
     */
    public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder getStoneInfoOrBuilder(
        int index) {
      return stoneInfo_.get(index);
    }

    private void initFields() {
      artifactId_ = 0;
      level_ = 0;
      starLevel_ = 0;
      star_ = 0;
      starBless_ = 0;
      stoneInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, artifactId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, starLevel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, star_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, starBless_);
      }
      for (int i = 0; i < stoneInfo_.size(); i++) {
        output.writeMessage(6, stoneInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, artifactId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, starLevel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, star_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, starBless_);
      }
      for (int i = 0; i < stoneInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, stoneInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ArtifactInfoMsg}
     *
     * <pre>
     *某部位神器信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ArtifactInfoMsg)
        com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.internal_static_ArtifactInfoMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.internal_static_ArtifactInfoMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.class, com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.Builder.class);
      }

      // Construct using com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStoneInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        artifactId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        starLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        starBless_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (stoneInfoBuilder_ == null) {
          stoneInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          stoneInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.internal_static_ArtifactInfoMsg_descriptor;
      }

      public com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg getDefaultInstanceForType() {
        return com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.getDefaultInstance();
      }

      public com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg build() {
        com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg buildPartial() {
        com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg result = new com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.artifactId_ = artifactId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.starLevel_ = starLevel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.star_ = star_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.starBless_ = starBless_;
        if (stoneInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            stoneInfo_ = java.util.Collections.unmodifiableList(stoneInfo_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.stoneInfo_ = stoneInfo_;
        } else {
          result.stoneInfo_ = stoneInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg) {
          return mergeFrom((com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg other) {
        if (other == com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg.getDefaultInstance()) return this;
        if (other.hasArtifactId()) {
          setArtifactId(other.getArtifactId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasStarLevel()) {
          setStarLevel(other.getStarLevel());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        if (other.hasStarBless()) {
          setStarBless(other.getStarBless());
        }
        if (stoneInfoBuilder_ == null) {
          if (!other.stoneInfo_.isEmpty()) {
            if (stoneInfo_.isEmpty()) {
              stoneInfo_ = other.stoneInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureStoneInfoIsMutable();
              stoneInfo_.addAll(other.stoneInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.stoneInfo_.isEmpty()) {
            if (stoneInfoBuilder_.isEmpty()) {
              stoneInfoBuilder_.dispose();
              stoneInfoBuilder_ = null;
              stoneInfo_ = other.stoneInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
              stoneInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStoneInfoFieldBuilder() : null;
            } else {
              stoneInfoBuilder_.addAllMessages(other.stoneInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chuangyou.common.protobuf.pb.artifact.ArtifactInfoProto.ArtifactInfoMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int artifactId_ ;
      /**
       * <code>optional int32 artifactId = 1;</code>
       *
       * <pre>
       * 神器ID
       * </pre>
       */
      public boolean hasArtifactId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 artifactId = 1;</code>
       *
       * <pre>
       * 神器ID
       * </pre>
       */
      public int getArtifactId() {
        return artifactId_;
      }
      /**
       * <code>optional int32 artifactId = 1;</code>
       *
       * <pre>
       * 神器ID
       * </pre>
       */
      public Builder setArtifactId(int value) {
        bitField0_ |= 0x00000001;
        artifactId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 artifactId = 1;</code>
       *
       * <pre>
       * 神器ID
       * </pre>
       */
      public Builder clearArtifactId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        artifactId_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 神器等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 神器等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 神器等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 神器等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      private int starLevel_ ;
      /**
       * <code>optional int32 starLevel = 3;</code>
       *
       * <pre>
       * 神器星级
       * </pre>
       */
      public boolean hasStarLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 starLevel = 3;</code>
       *
       * <pre>
       * 神器星级
       * </pre>
       */
      public int getStarLevel() {
        return starLevel_;
      }
      /**
       * <code>optional int32 starLevel = 3;</code>
       *
       * <pre>
       * 神器星级
       * </pre>
       */
      public Builder setStarLevel(int value) {
        bitField0_ |= 0x00000004;
        starLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 starLevel = 3;</code>
       *
       * <pre>
       * 神器星级
       * </pre>
       */
      public Builder clearStarLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        starLevel_ = 0;
        onChanged();
        return this;
      }

      private int star_ ;
      /**
       * <code>optional int32 star = 4;</code>
       *
       * <pre>
       * 当前星级星数
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 star = 4;</code>
       *
       * <pre>
       * 当前星级星数
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>optional int32 star = 4;</code>
       *
       * <pre>
       * 当前星级星数
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000008;
        star_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 star = 4;</code>
       *
       * <pre>
       * 当前星级星数
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000008);
        star_ = 0;
        onChanged();
        return this;
      }

      private int starBless_ ;
      /**
       * <code>optional int32 starBless = 5;</code>
       *
       * <pre>
       * 当前星数祝福值
       * </pre>
       */
      public boolean hasStarBless() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 starBless = 5;</code>
       *
       * <pre>
       * 当前星数祝福值
       * </pre>
       */
      public int getStarBless() {
        return starBless_;
      }
      /**
       * <code>optional int32 starBless = 5;</code>
       *
       * <pre>
       * 当前星数祝福值
       * </pre>
       */
      public Builder setStarBless(int value) {
        bitField0_ |= 0x00000010;
        starBless_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 starBless = 5;</code>
       *
       * <pre>
       * 当前星数祝福值
       * </pre>
       */
      public Builder clearStarBless() {
        bitField0_ = (bitField0_ & ~0x00000010);
        starBless_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg> stoneInfo_ =
        java.util.Collections.emptyList();
      private void ensureStoneInfoIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          stoneInfo_ = new java.util.ArrayList<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg>(stoneInfo_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder> stoneInfoBuilder_;

      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public java.util.List<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg> getStoneInfoList() {
        if (stoneInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stoneInfo_);
        } else {
          return stoneInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public int getStoneInfoCount() {
        if (stoneInfoBuilder_ == null) {
          return stoneInfo_.size();
        } else {
          return stoneInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg getStoneInfo(int index) {
        if (stoneInfoBuilder_ == null) {
          return stoneInfo_.get(index);
        } else {
          return stoneInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder setStoneInfo(
          int index, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg value) {
        if (stoneInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStoneInfoIsMutable();
          stoneInfo_.set(index, value);
          onChanged();
        } else {
          stoneInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder setStoneInfo(
          int index, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder builderForValue) {
        if (stoneInfoBuilder_ == null) {
          ensureStoneInfoIsMutable();
          stoneInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          stoneInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder addStoneInfo(com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg value) {
        if (stoneInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStoneInfoIsMutable();
          stoneInfo_.add(value);
          onChanged();
        } else {
          stoneInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder addStoneInfo(
          int index, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg value) {
        if (stoneInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStoneInfoIsMutable();
          stoneInfo_.add(index, value);
          onChanged();
        } else {
          stoneInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder addStoneInfo(
          com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder builderForValue) {
        if (stoneInfoBuilder_ == null) {
          ensureStoneInfoIsMutable();
          stoneInfo_.add(builderForValue.build());
          onChanged();
        } else {
          stoneInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder addStoneInfo(
          int index, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder builderForValue) {
        if (stoneInfoBuilder_ == null) {
          ensureStoneInfoIsMutable();
          stoneInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          stoneInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder addAllStoneInfo(
          java.lang.Iterable<? extends com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg> values) {
        if (stoneInfoBuilder_ == null) {
          ensureStoneInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stoneInfo_);
          onChanged();
        } else {
          stoneInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder clearStoneInfo() {
        if (stoneInfoBuilder_ == null) {
          stoneInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          stoneInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public Builder removeStoneInfo(int index) {
        if (stoneInfoBuilder_ == null) {
          ensureStoneInfoIsMutable();
          stoneInfo_.remove(index);
          onChanged();
        } else {
          stoneInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder getStoneInfoBuilder(
          int index) {
        return getStoneInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder getStoneInfoOrBuilder(
          int index) {
        if (stoneInfoBuilder_ == null) {
          return stoneInfo_.get(index);  } else {
          return stoneInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public java.util.List<? extends com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder> 
           getStoneInfoOrBuilderList() {
        if (stoneInfoBuilder_ != null) {
          return stoneInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stoneInfo_);
        }
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder addStoneInfoBuilder() {
        return getStoneInfoFieldBuilder().addBuilder(
            com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder addStoneInfoBuilder(
          int index) {
        return getStoneInfoFieldBuilder().addBuilder(
            index, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .ArtifactStoneInfoMsg stoneInfo = 6;</code>
       *
       * <pre>
       * 宝石信息
       * </pre>
       */
      public java.util.List<com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder> 
           getStoneInfoBuilderList() {
        return getStoneInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder> 
          getStoneInfoFieldBuilder() {
        if (stoneInfoBuilder_ == null) {
          stoneInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsg.Builder, com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.ArtifactStoneInfoMsgOrBuilder>(
                  stoneInfo_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          stoneInfo_ = null;
        }
        return stoneInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ArtifactInfoMsg)
    }

    static {
      defaultInstance = new ArtifactInfoMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ArtifactInfoMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ArtifactInfoMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ArtifactInfoMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036artifact/ArtifactInfoMsg.proto\032#artifa" +
      "ct/ArtifactStoneInfoMsg.proto\"\222\001\n\017Artifa" +
      "ctInfoMsg\022\022\n\nartifactId\030\001 \001(\005\022\r\n\005level\030\002" +
      " \001(\005\022\021\n\tstarLevel\030\003 \001(\005\022\014\n\004star\030\004 \001(\005\022\021\n" +
      "\tstarBless\030\005 \001(\005\022(\n\tstoneInfo\030\006 \003(\0132\025.Ar" +
      "tifactStoneInfoMsgB>\n)com.chuangyou.comm" +
      "on.protobuf.pb.artifactB\021ArtifactInfoPro" +
      "to"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.getDescriptor(),
        }, assigner);
    internal_static_ArtifactInfoMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ArtifactInfoMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ArtifactInfoMsg_descriptor,
        new java.lang.String[] { "ArtifactId", "Level", "StarLevel", "Star", "StarBless", "StoneInfo", });
    com.chuangyou.common.protobuf.pb.artifact.ArtifactStoneInfoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

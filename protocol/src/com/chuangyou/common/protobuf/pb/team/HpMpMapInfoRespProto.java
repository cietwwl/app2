// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: team/HpMpMapInfoRespMsg.proto

package com.chuangyou.common.protobuf.pb.team;

public final class HpMpMapInfoRespProto {
  private HpMpMapInfoRespProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HpMpMapInfoRespMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HpMpMapInfoRespMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required int64 playerId = 1;</code>
     */
    long getPlayerId();

    /**
     * <code>required int64 curBlood = 2;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasCurBlood();
    /**
     * <code>required int64 curBlood = 2;</code>
     *
     * <pre>
     * </pre>
     */
    long getCurBlood();

    /**
     * <code>required int64 maxBlood = 3;</code>
     */
    boolean hasMaxBlood();
    /**
     * <code>required int64 maxBlood = 3;</code>
     */
    long getMaxBlood();

    /**
     * <code>required int64 curSoul = 4;</code>
     *
     * <pre>
     *元魂
     * </pre>
     */
    boolean hasCurSoul();
    /**
     * <code>required int64 curSoul = 4;</code>
     *
     * <pre>
     *元魂
     * </pre>
     */
    long getCurSoul();

    /**
     * <code>required int64 maxSoul = 5;</code>
     */
    boolean hasMaxSoul();
    /**
     * <code>required int64 maxSoul = 5;</code>
     */
    long getMaxSoul();

    /**
     * <code>required int32 mapId = 6;</code>
     */
    boolean hasMapId();
    /**
     * <code>required int32 mapId = 6;</code>
     */
    int getMapId();

    /**
     * <code>required int32 mapKey = 7;</code>
     */
    boolean hasMapKey();
    /**
     * <code>required int32 mapKey = 7;</code>
     */
    int getMapKey();
  }
  /**
   * Protobuf type {@code HpMpMapInfoRespMsg}
   *
   * <pre>
   *返回队伍同步信息
   * </pre>
   */
  public static final class HpMpMapInfoRespMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:HpMpMapInfoRespMsg)
      HpMpMapInfoRespMsgOrBuilder {
    // Use HpMpMapInfoRespMsg.newBuilder() to construct.
    private HpMpMapInfoRespMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HpMpMapInfoRespMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HpMpMapInfoRespMsg defaultInstance;
    public static HpMpMapInfoRespMsg getDefaultInstance() {
      return defaultInstance;
    }

    public HpMpMapInfoRespMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HpMpMapInfoRespMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              curBlood_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxBlood_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              curSoul_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxSoul_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              mapId_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              mapKey_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.internal_static_HpMpMapInfoRespMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.internal_static_HpMpMapInfoRespMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.class, com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<HpMpMapInfoRespMsg> PARSER =
        new com.google.protobuf.AbstractParser<HpMpMapInfoRespMsg>() {
      public HpMpMapInfoRespMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HpMpMapInfoRespMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HpMpMapInfoRespMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>required int64 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 playerId = 1;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int CURBLOOD_FIELD_NUMBER = 2;
    private long curBlood_;
    /**
     * <code>required int64 curBlood = 2;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasCurBlood() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 curBlood = 2;</code>
     *
     * <pre>
     * </pre>
     */
    public long getCurBlood() {
      return curBlood_;
    }

    public static final int MAXBLOOD_FIELD_NUMBER = 3;
    private long maxBlood_;
    /**
     * <code>required int64 maxBlood = 3;</code>
     */
    public boolean hasMaxBlood() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 maxBlood = 3;</code>
     */
    public long getMaxBlood() {
      return maxBlood_;
    }

    public static final int CURSOUL_FIELD_NUMBER = 4;
    private long curSoul_;
    /**
     * <code>required int64 curSoul = 4;</code>
     *
     * <pre>
     *元魂
     * </pre>
     */
    public boolean hasCurSoul() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 curSoul = 4;</code>
     *
     * <pre>
     *元魂
     * </pre>
     */
    public long getCurSoul() {
      return curSoul_;
    }

    public static final int MAXSOUL_FIELD_NUMBER = 5;
    private long maxSoul_;
    /**
     * <code>required int64 maxSoul = 5;</code>
     */
    public boolean hasMaxSoul() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 maxSoul = 5;</code>
     */
    public long getMaxSoul() {
      return maxSoul_;
    }

    public static final int MAPID_FIELD_NUMBER = 6;
    private int mapId_;
    /**
     * <code>required int32 mapId = 6;</code>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 mapId = 6;</code>
     */
    public int getMapId() {
      return mapId_;
    }

    public static final int MAPKEY_FIELD_NUMBER = 7;
    private int mapKey_;
    /**
     * <code>required int32 mapKey = 7;</code>
     */
    public boolean hasMapKey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 mapKey = 7;</code>
     */
    public int getMapKey() {
      return mapKey_;
    }

    private void initFields() {
      playerId_ = 0L;
      curBlood_ = 0L;
      maxBlood_ = 0L;
      curSoul_ = 0L;
      maxSoul_ = 0L;
      mapId_ = 0;
      mapKey_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurBlood()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxBlood()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurSoul()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxSoul()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, curBlood_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, maxBlood_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, curSoul_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, maxSoul_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, mapId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, mapKey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, curBlood_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, maxBlood_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, curSoul_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, maxSoul_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, mapId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, mapKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HpMpMapInfoRespMsg}
     *
     * <pre>
     *返回队伍同步信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HpMpMapInfoRespMsg)
        com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.internal_static_HpMpMapInfoRespMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.internal_static_HpMpMapInfoRespMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.class, com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.Builder.class);
      }

      // Construct using com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        curBlood_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxBlood_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        curSoul_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxSoul_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        mapId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        mapKey_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.internal_static_HpMpMapInfoRespMsg_descriptor;
      }

      public com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg getDefaultInstanceForType() {
        return com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.getDefaultInstance();
      }

      public com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg build() {
        com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg buildPartial() {
        com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg result = new com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.curBlood_ = curBlood_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxBlood_ = maxBlood_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curSoul_ = curSoul_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxSoul_ = maxSoul_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mapKey_ = mapKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg) {
          return mergeFrom((com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg other) {
        if (other == com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasCurBlood()) {
          setCurBlood(other.getCurBlood());
        }
        if (other.hasMaxBlood()) {
          setMaxBlood(other.getMaxBlood());
        }
        if (other.hasCurSoul()) {
          setCurSoul(other.getCurSoul());
        }
        if (other.hasMaxSoul()) {
          setMaxSoul(other.getMaxSoul());
        }
        if (other.hasMapId()) {
          setMapId(other.getMapId());
        }
        if (other.hasMapKey()) {
          setMapKey(other.getMapKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasCurBlood()) {
          
          return false;
        }
        if (!hasMaxBlood()) {
          
          return false;
        }
        if (!hasCurSoul()) {
          
          return false;
        }
        if (!hasMaxSoul()) {
          
          return false;
        }
        if (!hasMapId()) {
          
          return false;
        }
        if (!hasMapKey()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chuangyou.common.protobuf.pb.team.HpMpMapInfoRespProto.HpMpMapInfoRespMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long playerId_ ;
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private long curBlood_ ;
      /**
       * <code>required int64 curBlood = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasCurBlood() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 curBlood = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public long getCurBlood() {
        return curBlood_;
      }
      /**
       * <code>required int64 curBlood = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setCurBlood(long value) {
        bitField0_ |= 0x00000002;
        curBlood_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 curBlood = 2;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearCurBlood() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curBlood_ = 0L;
        onChanged();
        return this;
      }

      private long maxBlood_ ;
      /**
       * <code>required int64 maxBlood = 3;</code>
       */
      public boolean hasMaxBlood() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 maxBlood = 3;</code>
       */
      public long getMaxBlood() {
        return maxBlood_;
      }
      /**
       * <code>required int64 maxBlood = 3;</code>
       */
      public Builder setMaxBlood(long value) {
        bitField0_ |= 0x00000004;
        maxBlood_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 maxBlood = 3;</code>
       */
      public Builder clearMaxBlood() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxBlood_ = 0L;
        onChanged();
        return this;
      }

      private long curSoul_ ;
      /**
       * <code>required int64 curSoul = 4;</code>
       *
       * <pre>
       *元魂
       * </pre>
       */
      public boolean hasCurSoul() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 curSoul = 4;</code>
       *
       * <pre>
       *元魂
       * </pre>
       */
      public long getCurSoul() {
        return curSoul_;
      }
      /**
       * <code>required int64 curSoul = 4;</code>
       *
       * <pre>
       *元魂
       * </pre>
       */
      public Builder setCurSoul(long value) {
        bitField0_ |= 0x00000008;
        curSoul_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 curSoul = 4;</code>
       *
       * <pre>
       *元魂
       * </pre>
       */
      public Builder clearCurSoul() {
        bitField0_ = (bitField0_ & ~0x00000008);
        curSoul_ = 0L;
        onChanged();
        return this;
      }

      private long maxSoul_ ;
      /**
       * <code>required int64 maxSoul = 5;</code>
       */
      public boolean hasMaxSoul() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 maxSoul = 5;</code>
       */
      public long getMaxSoul() {
        return maxSoul_;
      }
      /**
       * <code>required int64 maxSoul = 5;</code>
       */
      public Builder setMaxSoul(long value) {
        bitField0_ |= 0x00000010;
        maxSoul_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 maxSoul = 5;</code>
       */
      public Builder clearMaxSoul() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxSoul_ = 0L;
        onChanged();
        return this;
      }

      private int mapId_ ;
      /**
       * <code>required int32 mapId = 6;</code>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 mapId = 6;</code>
       */
      public int getMapId() {
        return mapId_;
      }
      /**
       * <code>required int32 mapId = 6;</code>
       */
      public Builder setMapId(int value) {
        bitField0_ |= 0x00000020;
        mapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mapId = 6;</code>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mapId_ = 0;
        onChanged();
        return this;
      }

      private int mapKey_ ;
      /**
       * <code>required int32 mapKey = 7;</code>
       */
      public boolean hasMapKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 mapKey = 7;</code>
       */
      public int getMapKey() {
        return mapKey_;
      }
      /**
       * <code>required int32 mapKey = 7;</code>
       */
      public Builder setMapKey(int value) {
        bitField0_ |= 0x00000040;
        mapKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mapKey = 7;</code>
       */
      public Builder clearMapKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        mapKey_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HpMpMapInfoRespMsg)
    }

    static {
      defaultInstance = new HpMpMapInfoRespMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HpMpMapInfoRespMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HpMpMapInfoRespMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HpMpMapInfoRespMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035team/HpMpMapInfoRespMsg.proto\"\213\001\n\022HpMp" +
      "MapInfoRespMsg\022\020\n\010playerId\030\001 \002(\003\022\020\n\010curB" +
      "lood\030\002 \002(\003\022\020\n\010maxBlood\030\003 \002(\003\022\017\n\007curSoul\030" +
      "\004 \002(\003\022\017\n\007maxSoul\030\005 \002(\003\022\r\n\005mapId\030\006 \002(\005\022\016\n" +
      "\006mapKey\030\007 \002(\005B=\n%com.chuangyou.common.pr" +
      "otobuf.pb.teamB\024HpMpMapInfoRespProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_HpMpMapInfoRespMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HpMpMapInfoRespMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_HpMpMapInfoRespMsg_descriptor,
        new java.lang.String[] { "PlayerId", "CurBlood", "MaxBlood", "CurSoul", "MaxSoul", "MapId", "MapKey", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

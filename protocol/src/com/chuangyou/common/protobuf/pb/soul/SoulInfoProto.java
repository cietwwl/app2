// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: soul/SoulInfoMsg.proto

package com.chuangyou.common.protobuf.pb.soul;

public final class SoulInfoProto {
  private SoulInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SoulInfoMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SoulInfoMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 exp = 1;</code>
     *
     * <pre>
     *'经验值',
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>required int64 exp = 1;</code>
     *
     * <pre>
     *'经验值',
     * </pre>
     */
    long getExp();

    /**
     * <code>required int32 card1 = 2;</code>
     *
     * <pre>
     * 身上装备的card1--8
     * </pre>
     */
    boolean hasCard1();
    /**
     * <code>required int32 card1 = 2;</code>
     *
     * <pre>
     * 身上装备的card1--8
     * </pre>
     */
    int getCard1();

    /**
     * <code>required int32 card2 = 3;</code>
     */
    boolean hasCard2();
    /**
     * <code>required int32 card2 = 3;</code>
     */
    int getCard2();

    /**
     * <code>required int32 card3 = 4;</code>
     */
    boolean hasCard3();
    /**
     * <code>required int32 card3 = 4;</code>
     */
    int getCard3();

    /**
     * <code>required int32 card4 = 5;</code>
     */
    boolean hasCard4();
    /**
     * <code>required int32 card4 = 5;</code>
     */
    int getCard4();

    /**
     * <code>required int32 card5 = 6;</code>
     */
    boolean hasCard5();
    /**
     * <code>required int32 card5 = 6;</code>
     */
    int getCard5();

    /**
     * <code>required int32 card6 = 7;</code>
     */
    boolean hasCard6();
    /**
     * <code>required int32 card6 = 7;</code>
     */
    int getCard6();

    /**
     * <code>required int32 card7 = 8;</code>
     */
    boolean hasCard7();
    /**
     * <code>required int32 card7 = 8;</code>
     */
    int getCard7();

    /**
     * <code>required int32 card8 = 9;</code>
     */
    boolean hasCard8();
    /**
     * <code>required int32 card8 = 9;</code>
     */
    int getCard8();

    /**
     * <code>required int32 fuseSkillId1 = 10;</code>
     *
     * <pre>
     *融合技能 1--4
     * </pre>
     */
    boolean hasFuseSkillId1();
    /**
     * <code>required int32 fuseSkillId1 = 10;</code>
     *
     * <pre>
     *融合技能 1--4
     * </pre>
     */
    int getFuseSkillId1();

    /**
     * <code>required int32 fuseSkillId2 = 11;</code>
     */
    boolean hasFuseSkillId2();
    /**
     * <code>required int32 fuseSkillId2 = 11;</code>
     */
    int getFuseSkillId2();

    /**
     * <code>required int32 fuseSkillId3 = 12;</code>
     */
    boolean hasFuseSkillId3();
    /**
     * <code>required int32 fuseSkillId3 = 12;</code>
     */
    int getFuseSkillId3();

    /**
     * <code>required int32 fuseSkillId4 = 13;</code>
     */
    boolean hasFuseSkillId4();
    /**
     * <code>required int32 fuseSkillId4 = 13;</code>
     */
    int getFuseSkillId4();

    /**
     * <code>required int64 fuseSkillCreateTime1 = 14;</code>
     *
     * <pre>
     * 融合技能 1--4 创建时间
     * </pre>
     */
    boolean hasFuseSkillCreateTime1();
    /**
     * <code>required int64 fuseSkillCreateTime1 = 14;</code>
     *
     * <pre>
     * 融合技能 1--4 创建时间
     * </pre>
     */
    long getFuseSkillCreateTime1();

    /**
     * <code>required int64 fuseSkillCreateTime2 = 15;</code>
     */
    boolean hasFuseSkillCreateTime2();
    /**
     * <code>required int64 fuseSkillCreateTime2 = 15;</code>
     */
    long getFuseSkillCreateTime2();

    /**
     * <code>required int64 fuseSkillCreateTime3 = 16;</code>
     */
    boolean hasFuseSkillCreateTime3();
    /**
     * <code>required int64 fuseSkillCreateTime3 = 16;</code>
     */
    long getFuseSkillCreateTime3();

    /**
     * <code>required int64 fuseSkillCreateTime4 = 17;</code>
     */
    boolean hasFuseSkillCreateTime4();
    /**
     * <code>required int64 fuseSkillCreateTime4 = 17;</code>
     */
    long getFuseSkillCreateTime4();

    /**
     * <code>required int32 proficiency = 18;</code>
     *
     * <pre>
     *制作熟悉度
     * </pre>
     */
    boolean hasProficiency();
    /**
     * <code>required int32 proficiency = 18;</code>
     *
     * <pre>
     *制作熟悉度
     * </pre>
     */
    int getProficiency();
  }
  /**
   * Protobuf type {@code SoulInfoMsg}
   */
  public static final class SoulInfoMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SoulInfoMsg)
      SoulInfoMsgOrBuilder {
    // Use SoulInfoMsg.newBuilder() to construct.
    private SoulInfoMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SoulInfoMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SoulInfoMsg defaultInstance;
    public static SoulInfoMsg getDefaultInstance() {
      return defaultInstance;
    }

    public SoulInfoMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SoulInfoMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              exp_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              card1_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              card2_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              card3_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              card4_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              card5_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              card6_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              card7_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              card8_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              fuseSkillId1_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              fuseSkillId2_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              fuseSkillId3_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              fuseSkillId4_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              fuseSkillCreateTime1_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              fuseSkillCreateTime2_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              fuseSkillCreateTime3_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              fuseSkillCreateTime4_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              proficiency_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.internal_static_SoulInfoMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.internal_static_SoulInfoMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.class, com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<SoulInfoMsg> PARSER =
        new com.google.protobuf.AbstractParser<SoulInfoMsg>() {
      public SoulInfoMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SoulInfoMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SoulInfoMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EXP_FIELD_NUMBER = 1;
    private long exp_;
    /**
     * <code>required int64 exp = 1;</code>
     *
     * <pre>
     *'经验值',
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 exp = 1;</code>
     *
     * <pre>
     *'经验值',
     * </pre>
     */
    public long getExp() {
      return exp_;
    }

    public static final int CARD1_FIELD_NUMBER = 2;
    private int card1_;
    /**
     * <code>required int32 card1 = 2;</code>
     *
     * <pre>
     * 身上装备的card1--8
     * </pre>
     */
    public boolean hasCard1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 card1 = 2;</code>
     *
     * <pre>
     * 身上装备的card1--8
     * </pre>
     */
    public int getCard1() {
      return card1_;
    }

    public static final int CARD2_FIELD_NUMBER = 3;
    private int card2_;
    /**
     * <code>required int32 card2 = 3;</code>
     */
    public boolean hasCard2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 card2 = 3;</code>
     */
    public int getCard2() {
      return card2_;
    }

    public static final int CARD3_FIELD_NUMBER = 4;
    private int card3_;
    /**
     * <code>required int32 card3 = 4;</code>
     */
    public boolean hasCard3() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 card3 = 4;</code>
     */
    public int getCard3() {
      return card3_;
    }

    public static final int CARD4_FIELD_NUMBER = 5;
    private int card4_;
    /**
     * <code>required int32 card4 = 5;</code>
     */
    public boolean hasCard4() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 card4 = 5;</code>
     */
    public int getCard4() {
      return card4_;
    }

    public static final int CARD5_FIELD_NUMBER = 6;
    private int card5_;
    /**
     * <code>required int32 card5 = 6;</code>
     */
    public boolean hasCard5() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 card5 = 6;</code>
     */
    public int getCard5() {
      return card5_;
    }

    public static final int CARD6_FIELD_NUMBER = 7;
    private int card6_;
    /**
     * <code>required int32 card6 = 7;</code>
     */
    public boolean hasCard6() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 card6 = 7;</code>
     */
    public int getCard6() {
      return card6_;
    }

    public static final int CARD7_FIELD_NUMBER = 8;
    private int card7_;
    /**
     * <code>required int32 card7 = 8;</code>
     */
    public boolean hasCard7() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 card7 = 8;</code>
     */
    public int getCard7() {
      return card7_;
    }

    public static final int CARD8_FIELD_NUMBER = 9;
    private int card8_;
    /**
     * <code>required int32 card8 = 9;</code>
     */
    public boolean hasCard8() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 card8 = 9;</code>
     */
    public int getCard8() {
      return card8_;
    }

    public static final int FUSESKILLID1_FIELD_NUMBER = 10;
    private int fuseSkillId1_;
    /**
     * <code>required int32 fuseSkillId1 = 10;</code>
     *
     * <pre>
     *融合技能 1--4
     * </pre>
     */
    public boolean hasFuseSkillId1() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 fuseSkillId1 = 10;</code>
     *
     * <pre>
     *融合技能 1--4
     * </pre>
     */
    public int getFuseSkillId1() {
      return fuseSkillId1_;
    }

    public static final int FUSESKILLID2_FIELD_NUMBER = 11;
    private int fuseSkillId2_;
    /**
     * <code>required int32 fuseSkillId2 = 11;</code>
     */
    public boolean hasFuseSkillId2() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 fuseSkillId2 = 11;</code>
     */
    public int getFuseSkillId2() {
      return fuseSkillId2_;
    }

    public static final int FUSESKILLID3_FIELD_NUMBER = 12;
    private int fuseSkillId3_;
    /**
     * <code>required int32 fuseSkillId3 = 12;</code>
     */
    public boolean hasFuseSkillId3() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 fuseSkillId3 = 12;</code>
     */
    public int getFuseSkillId3() {
      return fuseSkillId3_;
    }

    public static final int FUSESKILLID4_FIELD_NUMBER = 13;
    private int fuseSkillId4_;
    /**
     * <code>required int32 fuseSkillId4 = 13;</code>
     */
    public boolean hasFuseSkillId4() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 fuseSkillId4 = 13;</code>
     */
    public int getFuseSkillId4() {
      return fuseSkillId4_;
    }

    public static final int FUSESKILLCREATETIME1_FIELD_NUMBER = 14;
    private long fuseSkillCreateTime1_;
    /**
     * <code>required int64 fuseSkillCreateTime1 = 14;</code>
     *
     * <pre>
     * 融合技能 1--4 创建时间
     * </pre>
     */
    public boolean hasFuseSkillCreateTime1() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int64 fuseSkillCreateTime1 = 14;</code>
     *
     * <pre>
     * 融合技能 1--4 创建时间
     * </pre>
     */
    public long getFuseSkillCreateTime1() {
      return fuseSkillCreateTime1_;
    }

    public static final int FUSESKILLCREATETIME2_FIELD_NUMBER = 15;
    private long fuseSkillCreateTime2_;
    /**
     * <code>required int64 fuseSkillCreateTime2 = 15;</code>
     */
    public boolean hasFuseSkillCreateTime2() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int64 fuseSkillCreateTime2 = 15;</code>
     */
    public long getFuseSkillCreateTime2() {
      return fuseSkillCreateTime2_;
    }

    public static final int FUSESKILLCREATETIME3_FIELD_NUMBER = 16;
    private long fuseSkillCreateTime3_;
    /**
     * <code>required int64 fuseSkillCreateTime3 = 16;</code>
     */
    public boolean hasFuseSkillCreateTime3() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int64 fuseSkillCreateTime3 = 16;</code>
     */
    public long getFuseSkillCreateTime3() {
      return fuseSkillCreateTime3_;
    }

    public static final int FUSESKILLCREATETIME4_FIELD_NUMBER = 17;
    private long fuseSkillCreateTime4_;
    /**
     * <code>required int64 fuseSkillCreateTime4 = 17;</code>
     */
    public boolean hasFuseSkillCreateTime4() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int64 fuseSkillCreateTime4 = 17;</code>
     */
    public long getFuseSkillCreateTime4() {
      return fuseSkillCreateTime4_;
    }

    public static final int PROFICIENCY_FIELD_NUMBER = 18;
    private int proficiency_;
    /**
     * <code>required int32 proficiency = 18;</code>
     *
     * <pre>
     *制作熟悉度
     * </pre>
     */
    public boolean hasProficiency() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 proficiency = 18;</code>
     *
     * <pre>
     *制作熟悉度
     * </pre>
     */
    public int getProficiency() {
      return proficiency_;
    }

    private void initFields() {
      exp_ = 0L;
      card1_ = 0;
      card2_ = 0;
      card3_ = 0;
      card4_ = 0;
      card5_ = 0;
      card6_ = 0;
      card7_ = 0;
      card8_ = 0;
      fuseSkillId1_ = 0;
      fuseSkillId2_ = 0;
      fuseSkillId3_ = 0;
      fuseSkillId4_ = 0;
      fuseSkillCreateTime1_ = 0L;
      fuseSkillCreateTime2_ = 0L;
      fuseSkillCreateTime3_ = 0L;
      fuseSkillCreateTime4_ = 0L;
      proficiency_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard5()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard6()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard7()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCard8()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillId1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillId2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillId3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillId4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillCreateTime1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillCreateTime2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillCreateTime3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFuseSkillCreateTime4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProficiency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, exp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, card1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, card2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, card3_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, card4_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, card5_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, card6_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, card7_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, card8_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, fuseSkillId1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, fuseSkillId2_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, fuseSkillId3_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, fuseSkillId4_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, fuseSkillCreateTime1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, fuseSkillCreateTime2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, fuseSkillCreateTime3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, fuseSkillCreateTime4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, proficiency_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, exp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, card1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, card2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, card3_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, card4_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, card5_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, card6_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, card7_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, card8_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, fuseSkillId1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, fuseSkillId2_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, fuseSkillId3_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, fuseSkillId4_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, fuseSkillCreateTime1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, fuseSkillCreateTime2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, fuseSkillCreateTime3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, fuseSkillCreateTime4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, proficiency_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SoulInfoMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SoulInfoMsg)
        com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.internal_static_SoulInfoMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.internal_static_SoulInfoMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.class, com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.Builder.class);
      }

      // Construct using com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        exp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        card1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        card2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        card3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        card4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        card5_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        card6_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        card7_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        card8_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fuseSkillId1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        fuseSkillId2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        fuseSkillId3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        fuseSkillId4_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        fuseSkillCreateTime1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        fuseSkillCreateTime2_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        fuseSkillCreateTime3_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        fuseSkillCreateTime4_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        proficiency_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.internal_static_SoulInfoMsg_descriptor;
      }

      public com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg getDefaultInstanceForType() {
        return com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.getDefaultInstance();
      }

      public com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg build() {
        com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg buildPartial() {
        com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg result = new com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.card1_ = card1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.card2_ = card2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.card3_ = card3_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.card4_ = card4_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.card5_ = card5_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.card6_ = card6_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.card7_ = card7_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.card8_ = card8_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fuseSkillId1_ = fuseSkillId1_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.fuseSkillId2_ = fuseSkillId2_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.fuseSkillId3_ = fuseSkillId3_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fuseSkillId4_ = fuseSkillId4_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.fuseSkillCreateTime1_ = fuseSkillCreateTime1_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fuseSkillCreateTime2_ = fuseSkillCreateTime2_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fuseSkillCreateTime3_ = fuseSkillCreateTime3_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.fuseSkillCreateTime4_ = fuseSkillCreateTime4_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.proficiency_ = proficiency_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg) {
          return mergeFrom((com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg other) {
        if (other == com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg.getDefaultInstance()) return this;
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasCard1()) {
          setCard1(other.getCard1());
        }
        if (other.hasCard2()) {
          setCard2(other.getCard2());
        }
        if (other.hasCard3()) {
          setCard3(other.getCard3());
        }
        if (other.hasCard4()) {
          setCard4(other.getCard4());
        }
        if (other.hasCard5()) {
          setCard5(other.getCard5());
        }
        if (other.hasCard6()) {
          setCard6(other.getCard6());
        }
        if (other.hasCard7()) {
          setCard7(other.getCard7());
        }
        if (other.hasCard8()) {
          setCard8(other.getCard8());
        }
        if (other.hasFuseSkillId1()) {
          setFuseSkillId1(other.getFuseSkillId1());
        }
        if (other.hasFuseSkillId2()) {
          setFuseSkillId2(other.getFuseSkillId2());
        }
        if (other.hasFuseSkillId3()) {
          setFuseSkillId3(other.getFuseSkillId3());
        }
        if (other.hasFuseSkillId4()) {
          setFuseSkillId4(other.getFuseSkillId4());
        }
        if (other.hasFuseSkillCreateTime1()) {
          setFuseSkillCreateTime1(other.getFuseSkillCreateTime1());
        }
        if (other.hasFuseSkillCreateTime2()) {
          setFuseSkillCreateTime2(other.getFuseSkillCreateTime2());
        }
        if (other.hasFuseSkillCreateTime3()) {
          setFuseSkillCreateTime3(other.getFuseSkillCreateTime3());
        }
        if (other.hasFuseSkillCreateTime4()) {
          setFuseSkillCreateTime4(other.getFuseSkillCreateTime4());
        }
        if (other.hasProficiency()) {
          setProficiency(other.getProficiency());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExp()) {
          
          return false;
        }
        if (!hasCard1()) {
          
          return false;
        }
        if (!hasCard2()) {
          
          return false;
        }
        if (!hasCard3()) {
          
          return false;
        }
        if (!hasCard4()) {
          
          return false;
        }
        if (!hasCard5()) {
          
          return false;
        }
        if (!hasCard6()) {
          
          return false;
        }
        if (!hasCard7()) {
          
          return false;
        }
        if (!hasCard8()) {
          
          return false;
        }
        if (!hasFuseSkillId1()) {
          
          return false;
        }
        if (!hasFuseSkillId2()) {
          
          return false;
        }
        if (!hasFuseSkillId3()) {
          
          return false;
        }
        if (!hasFuseSkillId4()) {
          
          return false;
        }
        if (!hasFuseSkillCreateTime1()) {
          
          return false;
        }
        if (!hasFuseSkillCreateTime2()) {
          
          return false;
        }
        if (!hasFuseSkillCreateTime3()) {
          
          return false;
        }
        if (!hasFuseSkillCreateTime4()) {
          
          return false;
        }
        if (!hasProficiency()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chuangyou.common.protobuf.pb.soul.SoulInfoProto.SoulInfoMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long exp_ ;
      /**
       * <code>required int64 exp = 1;</code>
       *
       * <pre>
       *'经验值',
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 exp = 1;</code>
       *
       * <pre>
       *'经验值',
       * </pre>
       */
      public long getExp() {
        return exp_;
      }
      /**
       * <code>required int64 exp = 1;</code>
       *
       * <pre>
       *'经验值',
       * </pre>
       */
      public Builder setExp(long value) {
        bitField0_ |= 0x00000001;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 exp = 1;</code>
       *
       * <pre>
       *'经验值',
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        exp_ = 0L;
        onChanged();
        return this;
      }

      private int card1_ ;
      /**
       * <code>required int32 card1 = 2;</code>
       *
       * <pre>
       * 身上装备的card1--8
       * </pre>
       */
      public boolean hasCard1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 card1 = 2;</code>
       *
       * <pre>
       * 身上装备的card1--8
       * </pre>
       */
      public int getCard1() {
        return card1_;
      }
      /**
       * <code>required int32 card1 = 2;</code>
       *
       * <pre>
       * 身上装备的card1--8
       * </pre>
       */
      public Builder setCard1(int value) {
        bitField0_ |= 0x00000002;
        card1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card1 = 2;</code>
       *
       * <pre>
       * 身上装备的card1--8
       * </pre>
       */
      public Builder clearCard1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        card1_ = 0;
        onChanged();
        return this;
      }

      private int card2_ ;
      /**
       * <code>required int32 card2 = 3;</code>
       */
      public boolean hasCard2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 card2 = 3;</code>
       */
      public int getCard2() {
        return card2_;
      }
      /**
       * <code>required int32 card2 = 3;</code>
       */
      public Builder setCard2(int value) {
        bitField0_ |= 0x00000004;
        card2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card2 = 3;</code>
       */
      public Builder clearCard2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        card2_ = 0;
        onChanged();
        return this;
      }

      private int card3_ ;
      /**
       * <code>required int32 card3 = 4;</code>
       */
      public boolean hasCard3() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 card3 = 4;</code>
       */
      public int getCard3() {
        return card3_;
      }
      /**
       * <code>required int32 card3 = 4;</code>
       */
      public Builder setCard3(int value) {
        bitField0_ |= 0x00000008;
        card3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card3 = 4;</code>
       */
      public Builder clearCard3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        card3_ = 0;
        onChanged();
        return this;
      }

      private int card4_ ;
      /**
       * <code>required int32 card4 = 5;</code>
       */
      public boolean hasCard4() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 card4 = 5;</code>
       */
      public int getCard4() {
        return card4_;
      }
      /**
       * <code>required int32 card4 = 5;</code>
       */
      public Builder setCard4(int value) {
        bitField0_ |= 0x00000010;
        card4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card4 = 5;</code>
       */
      public Builder clearCard4() {
        bitField0_ = (bitField0_ & ~0x00000010);
        card4_ = 0;
        onChanged();
        return this;
      }

      private int card5_ ;
      /**
       * <code>required int32 card5 = 6;</code>
       */
      public boolean hasCard5() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 card5 = 6;</code>
       */
      public int getCard5() {
        return card5_;
      }
      /**
       * <code>required int32 card5 = 6;</code>
       */
      public Builder setCard5(int value) {
        bitField0_ |= 0x00000020;
        card5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card5 = 6;</code>
       */
      public Builder clearCard5() {
        bitField0_ = (bitField0_ & ~0x00000020);
        card5_ = 0;
        onChanged();
        return this;
      }

      private int card6_ ;
      /**
       * <code>required int32 card6 = 7;</code>
       */
      public boolean hasCard6() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 card6 = 7;</code>
       */
      public int getCard6() {
        return card6_;
      }
      /**
       * <code>required int32 card6 = 7;</code>
       */
      public Builder setCard6(int value) {
        bitField0_ |= 0x00000040;
        card6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card6 = 7;</code>
       */
      public Builder clearCard6() {
        bitField0_ = (bitField0_ & ~0x00000040);
        card6_ = 0;
        onChanged();
        return this;
      }

      private int card7_ ;
      /**
       * <code>required int32 card7 = 8;</code>
       */
      public boolean hasCard7() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 card7 = 8;</code>
       */
      public int getCard7() {
        return card7_;
      }
      /**
       * <code>required int32 card7 = 8;</code>
       */
      public Builder setCard7(int value) {
        bitField0_ |= 0x00000080;
        card7_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card7 = 8;</code>
       */
      public Builder clearCard7() {
        bitField0_ = (bitField0_ & ~0x00000080);
        card7_ = 0;
        onChanged();
        return this;
      }

      private int card8_ ;
      /**
       * <code>required int32 card8 = 9;</code>
       */
      public boolean hasCard8() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 card8 = 9;</code>
       */
      public int getCard8() {
        return card8_;
      }
      /**
       * <code>required int32 card8 = 9;</code>
       */
      public Builder setCard8(int value) {
        bitField0_ |= 0x00000100;
        card8_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 card8 = 9;</code>
       */
      public Builder clearCard8() {
        bitField0_ = (bitField0_ & ~0x00000100);
        card8_ = 0;
        onChanged();
        return this;
      }

      private int fuseSkillId1_ ;
      /**
       * <code>required int32 fuseSkillId1 = 10;</code>
       *
       * <pre>
       *融合技能 1--4
       * </pre>
       */
      public boolean hasFuseSkillId1() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 fuseSkillId1 = 10;</code>
       *
       * <pre>
       *融合技能 1--4
       * </pre>
       */
      public int getFuseSkillId1() {
        return fuseSkillId1_;
      }
      /**
       * <code>required int32 fuseSkillId1 = 10;</code>
       *
       * <pre>
       *融合技能 1--4
       * </pre>
       */
      public Builder setFuseSkillId1(int value) {
        bitField0_ |= 0x00000200;
        fuseSkillId1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fuseSkillId1 = 10;</code>
       *
       * <pre>
       *融合技能 1--4
       * </pre>
       */
      public Builder clearFuseSkillId1() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fuseSkillId1_ = 0;
        onChanged();
        return this;
      }

      private int fuseSkillId2_ ;
      /**
       * <code>required int32 fuseSkillId2 = 11;</code>
       */
      public boolean hasFuseSkillId2() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 fuseSkillId2 = 11;</code>
       */
      public int getFuseSkillId2() {
        return fuseSkillId2_;
      }
      /**
       * <code>required int32 fuseSkillId2 = 11;</code>
       */
      public Builder setFuseSkillId2(int value) {
        bitField0_ |= 0x00000400;
        fuseSkillId2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fuseSkillId2 = 11;</code>
       */
      public Builder clearFuseSkillId2() {
        bitField0_ = (bitField0_ & ~0x00000400);
        fuseSkillId2_ = 0;
        onChanged();
        return this;
      }

      private int fuseSkillId3_ ;
      /**
       * <code>required int32 fuseSkillId3 = 12;</code>
       */
      public boolean hasFuseSkillId3() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 fuseSkillId3 = 12;</code>
       */
      public int getFuseSkillId3() {
        return fuseSkillId3_;
      }
      /**
       * <code>required int32 fuseSkillId3 = 12;</code>
       */
      public Builder setFuseSkillId3(int value) {
        bitField0_ |= 0x00000800;
        fuseSkillId3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fuseSkillId3 = 12;</code>
       */
      public Builder clearFuseSkillId3() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fuseSkillId3_ = 0;
        onChanged();
        return this;
      }

      private int fuseSkillId4_ ;
      /**
       * <code>required int32 fuseSkillId4 = 13;</code>
       */
      public boolean hasFuseSkillId4() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 fuseSkillId4 = 13;</code>
       */
      public int getFuseSkillId4() {
        return fuseSkillId4_;
      }
      /**
       * <code>required int32 fuseSkillId4 = 13;</code>
       */
      public Builder setFuseSkillId4(int value) {
        bitField0_ |= 0x00001000;
        fuseSkillId4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fuseSkillId4 = 13;</code>
       */
      public Builder clearFuseSkillId4() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fuseSkillId4_ = 0;
        onChanged();
        return this;
      }

      private long fuseSkillCreateTime1_ ;
      /**
       * <code>required int64 fuseSkillCreateTime1 = 14;</code>
       *
       * <pre>
       * 融合技能 1--4 创建时间
       * </pre>
       */
      public boolean hasFuseSkillCreateTime1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int64 fuseSkillCreateTime1 = 14;</code>
       *
       * <pre>
       * 融合技能 1--4 创建时间
       * </pre>
       */
      public long getFuseSkillCreateTime1() {
        return fuseSkillCreateTime1_;
      }
      /**
       * <code>required int64 fuseSkillCreateTime1 = 14;</code>
       *
       * <pre>
       * 融合技能 1--4 创建时间
       * </pre>
       */
      public Builder setFuseSkillCreateTime1(long value) {
        bitField0_ |= 0x00002000;
        fuseSkillCreateTime1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 fuseSkillCreateTime1 = 14;</code>
       *
       * <pre>
       * 融合技能 1--4 创建时间
       * </pre>
       */
      public Builder clearFuseSkillCreateTime1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        fuseSkillCreateTime1_ = 0L;
        onChanged();
        return this;
      }

      private long fuseSkillCreateTime2_ ;
      /**
       * <code>required int64 fuseSkillCreateTime2 = 15;</code>
       */
      public boolean hasFuseSkillCreateTime2() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int64 fuseSkillCreateTime2 = 15;</code>
       */
      public long getFuseSkillCreateTime2() {
        return fuseSkillCreateTime2_;
      }
      /**
       * <code>required int64 fuseSkillCreateTime2 = 15;</code>
       */
      public Builder setFuseSkillCreateTime2(long value) {
        bitField0_ |= 0x00004000;
        fuseSkillCreateTime2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 fuseSkillCreateTime2 = 15;</code>
       */
      public Builder clearFuseSkillCreateTime2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fuseSkillCreateTime2_ = 0L;
        onChanged();
        return this;
      }

      private long fuseSkillCreateTime3_ ;
      /**
       * <code>required int64 fuseSkillCreateTime3 = 16;</code>
       */
      public boolean hasFuseSkillCreateTime3() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int64 fuseSkillCreateTime3 = 16;</code>
       */
      public long getFuseSkillCreateTime3() {
        return fuseSkillCreateTime3_;
      }
      /**
       * <code>required int64 fuseSkillCreateTime3 = 16;</code>
       */
      public Builder setFuseSkillCreateTime3(long value) {
        bitField0_ |= 0x00008000;
        fuseSkillCreateTime3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 fuseSkillCreateTime3 = 16;</code>
       */
      public Builder clearFuseSkillCreateTime3() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fuseSkillCreateTime3_ = 0L;
        onChanged();
        return this;
      }

      private long fuseSkillCreateTime4_ ;
      /**
       * <code>required int64 fuseSkillCreateTime4 = 17;</code>
       */
      public boolean hasFuseSkillCreateTime4() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int64 fuseSkillCreateTime4 = 17;</code>
       */
      public long getFuseSkillCreateTime4() {
        return fuseSkillCreateTime4_;
      }
      /**
       * <code>required int64 fuseSkillCreateTime4 = 17;</code>
       */
      public Builder setFuseSkillCreateTime4(long value) {
        bitField0_ |= 0x00010000;
        fuseSkillCreateTime4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 fuseSkillCreateTime4 = 17;</code>
       */
      public Builder clearFuseSkillCreateTime4() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fuseSkillCreateTime4_ = 0L;
        onChanged();
        return this;
      }

      private int proficiency_ ;
      /**
       * <code>required int32 proficiency = 18;</code>
       *
       * <pre>
       *制作熟悉度
       * </pre>
       */
      public boolean hasProficiency() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 proficiency = 18;</code>
       *
       * <pre>
       *制作熟悉度
       * </pre>
       */
      public int getProficiency() {
        return proficiency_;
      }
      /**
       * <code>required int32 proficiency = 18;</code>
       *
       * <pre>
       *制作熟悉度
       * </pre>
       */
      public Builder setProficiency(int value) {
        bitField0_ |= 0x00020000;
        proficiency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 proficiency = 18;</code>
       *
       * <pre>
       *制作熟悉度
       * </pre>
       */
      public Builder clearProficiency() {
        bitField0_ = (bitField0_ & ~0x00020000);
        proficiency_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SoulInfoMsg)
    }

    static {
      defaultInstance = new SoulInfoMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SoulInfoMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SoulInfoMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SoulInfoMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026soul/SoulInfoMsg.proto\"\367\002\n\013SoulInfoMsg" +
      "\022\013\n\003exp\030\001 \002(\003\022\r\n\005card1\030\002 \002(\005\022\r\n\005card2\030\003 " +
      "\002(\005\022\r\n\005card3\030\004 \002(\005\022\r\n\005card4\030\005 \002(\005\022\r\n\005car" +
      "d5\030\006 \002(\005\022\r\n\005card6\030\007 \002(\005\022\r\n\005card7\030\010 \002(\005\022\r" +
      "\n\005card8\030\t \002(\005\022\024\n\014fuseSkillId1\030\n \002(\005\022\024\n\014f" +
      "useSkillId2\030\013 \002(\005\022\024\n\014fuseSkillId3\030\014 \002(\005\022" +
      "\024\n\014fuseSkillId4\030\r \002(\005\022\034\n\024fuseSkillCreate" +
      "Time1\030\016 \002(\003\022\034\n\024fuseSkillCreateTime2\030\017 \002(" +
      "\003\022\034\n\024fuseSkillCreateTime3\030\020 \002(\003\022\034\n\024fuseS" +
      "killCreateTime4\030\021 \002(\003\022\023\n\013proficiency\030\022 \002",
      "(\005B6\n%com.chuangyou.common.protobuf.pb.s" +
      "oulB\rSoulInfoProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SoulInfoMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SoulInfoMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SoulInfoMsg_descriptor,
        new java.lang.String[] { "Exp", "Card1", "Card2", "Card3", "Card4", "Card5", "Card6", "Card7", "Card8", "FuseSkillId1", "FuseSkillId2", "FuseSkillId3", "FuseSkillId4", "FuseSkillCreateTime1", "FuseSkillCreateTime2", "FuseSkillCreateTime3", "FuseSkillCreateTime4", "Proficiency", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
